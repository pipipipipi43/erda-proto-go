// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: trigger.proto

package client

import (
	context "context"
	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/core/pipeline/cms/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// CmsService trigger.proto
	CmsService() pb.CmsServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		cmsService: pb.NewCmsServiceClient(cc),
	}
}

type serviceClients struct {
	cmsService pb.CmsServiceClient
}

func (c *serviceClients) CmsService() pb.CmsServiceClient {
	return c.cmsService
}

type cmsServiceWrapper struct {
	client pb.CmsServiceClient
	opts   []grpc1.CallOption
}

func (s *cmsServiceWrapper) RunPipelinesByTrigger(ctx context.Context, req *pb.PipelineTriggerRequest) (*pb.PipelineTriggerResponse, error) {
	return s.client.RunPipelinesByTrigger(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
